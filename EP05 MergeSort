#include <stdio.h>
#include <stdlib.h>
#include <time.h>

void Intercala(int p, int q, int r, int v[]) {
    int i, j, k, *w;
    w = malloc ((r-p) * sizeof (int));
    i = p; j = q; k = 0;
    while (i < q && j < r) {
        if (v[i] <= v[j]) w[k++] = v[i++];
        else w[k++] = v[j++];
    }
    while (i < q) w[k++] = v[i++];
    while (j < r) w[k++] = v[j++];
    for (i = p; i < r; i++) v[i] = w[i-p];
    free (w);
}

void Mergesort(int p, int r, int v[]) {
    if (p < r - 1) {
        int q = (p + r)/2;
        Mergesort (p, q, v);
        Mergesort (q, r, v);
        Intercala (p, q, r, v);
    }
}
int main() {
    int k, i;
    double t;
    printf("Qual o tamanho do vetor?: ");
    scanf("%d", &k);
    int v[k];
    for(i = 0; i < k; i++) {
        v[i] = rand();
    }
    t = 0.0;
    clock_t begin = clock();
    Mergesort(0, k, v);
    clock_t end = clock();
    t += (double)(end - begin) / CLOCKS_PER_SEC;
    printf("Tempo de execução: %f seg", t);
    return 0;
}
